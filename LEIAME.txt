Instruções para uso da aplicação:

Para executar o teste integrado, execute o programa testes.py no diretório principal. Ele já cria a base de dados de nome 'Yahtzee' (e sobreescreve uma base exitente se esta tiver o mesmo nome) com as suas tabelas e ao final da execução dos testes elimina todas as tuplas de todas as tabelas. Implementamos, além dos testes, os módulos dado, avalia, combinacao, categoria, banco_de_dados, jogador, partida e tabela. Os arquivos-fonte de Dado, Avalia e Combinacao encontram-se no diretório Funcionalidades, com o nome <nome do módulo>.py. Como esses arquivos servem apenas como módulos e não serão executados individualmente no futuro, não há problema se na execução individual destes aparecer um erro referente aos "imports" feitos no programa. Podemos perceber que as suas funções de acesso passam nos testes integrados. Já o arquivo-fonte dos módulos Jogador, Partida, Tabela e Categoria encontram-se no diretório Entidades, com o nome <nome do módulo>.py. O módulo Jogo no diagrama de arquitetura é só uma no diagrama é só uma representação do local em que a interface gráfica de usuário se comunicará com os outros módulos da aplicação. 

A pasta saves é destinada ao arquivos XML das partidas salvas. Há uma função de testes que executa a funcionalidade que salva a partida em execução e, portanto, a cada teste rodado é gerado um arquivo XML nessa pasta para demonstração.

O dicionário partida_atual do módulo partida.py e a lista combinacao no módulo combinacao.py não guardarão informações relevantes para persistirem no banco de dados, por isso decidimos permanecê-las encapsuladas nos módulos. Essas se tratam de variáveis com informações para o andamento da partida atual e restauração de uma partida pausada. Já a lista categorias do módulo categoria.py é hard-coded por não precisar ser modificada. 

O jogo deverá ser executado a partir do diretório raíz do projeto (Yahtzee/).
Python v3.8.3
Tkinter v8.6.9
MySQL v8.0